{"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":8707361,"sourceType":"datasetVersion","datasetId":5223056}],"dockerImageVersionId":30732,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:46.074531Z","iopub.execute_input":"2024-06-16T21:28:46.075375Z","iopub.status.idle":"2024-06-16T21:28:46.080539Z","shell.execute_reply.started":"2024-06-16T21:28:46.075337Z","shell.execute_reply":"2024-06-16T21:28:46.079405Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"code","source":"train = pd.read_csv('/kaggle/input/kagglex/train.csv')\ntest = pd.read_csv('/kaggle/input/kagglex/test.csv')","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:46.082129Z","iopub.execute_input":"2024-06-16T21:28:46.082480Z","iopub.status.idle":"2024-06-16T21:28:46.495976Z","shell.execute_reply.started":"2024-06-16T21:28:46.082453Z","shell.execute_reply":"2024-06-16T21:28:46.495060Z"},"trusted":true},"execution_count":4,"outputs":[]},{"cell_type":"code","source":"#set index to id column\ntrain.set_index('id', inplace=True)\ntest.set_index('id', inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:46.497108Z","iopub.execute_input":"2024-06-16T21:28:46.497412Z","iopub.status.idle":"2024-06-16T21:28:46.510368Z","shell.execute_reply.started":"2024-06-16T21:28:46.497387Z","shell.execute_reply":"2024-06-16T21:28:46.509212Z"},"trusted":true},"execution_count":5,"outputs":[]},{"cell_type":"code","source":"train.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:46.512539Z","iopub.execute_input":"2024-06-16T21:28:46.512842Z","iopub.status.idle":"2024-06-16T21:28:46.535454Z","shell.execute_reply.started":"2024-06-16T21:28:46.512817Z","shell.execute_reply":"2024-06-16T21:28:46.534317Z"},"trusted":true},"execution_count":6,"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"      brand          model  model_year  milage fuel_type  \\\nid                                                         \n0      Ford   F-150 Lariat        2018   74349  Gasoline   \n1       BMW          335 i        2007   80000  Gasoline   \n2    Jaguar      XF Luxury        2009   91491  Gasoline   \n3       BMW   X7 xDrive40i        2022    2437    Hybrid   \n4   Pontiac  Firebird Base        2001  111000  Gasoline   \n\n                                               engine  \\\nid                                                      \n0       375.0HP 3.5L V6 Cylinder Engine Gasoline Fuel   \n1   300.0HP 3.0L Straight 6 Cylinder Engine Gasoli...   \n2        300.0HP 4.2L 8 Cylinder Engine Gasoline Fuel   \n3   335.0HP 3.0L Straight 6 Cylinder Engine Gasoli...   \n4       200.0HP 3.8L V6 Cylinder Engine Gasoline Fuel   \n\n                      transmission ext_col int_col       accident clean_title  \\\nid                                                                              \n0                     10-Speed A/T    Blue    Gray  None reported         Yes   \n1                      6-Speed M/T   Black   Black  None reported         Yes   \n2                      6-Speed A/T  Purple   Beige  None reported         Yes   \n3   Transmission w/Dual Shift Mode    Gray   Brown  None reported         Yes   \n4                              A/T   White   Black  None reported         Yes   \n\n    price  \nid         \n0   11000  \n1    8250  \n2   15000  \n3   63500  \n4    7850  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>brand</th>\n      <th>model</th>\n      <th>model_year</th>\n      <th>milage</th>\n      <th>fuel_type</th>\n      <th>engine</th>\n      <th>transmission</th>\n      <th>ext_col</th>\n      <th>int_col</th>\n      <th>accident</th>\n      <th>clean_title</th>\n      <th>price</th>\n    </tr>\n    <tr>\n      <th>id</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Ford</td>\n      <td>F-150 Lariat</td>\n      <td>2018</td>\n      <td>74349</td>\n      <td>Gasoline</td>\n      <td>375.0HP 3.5L V6 Cylinder Engine Gasoline Fuel</td>\n      <td>10-Speed A/T</td>\n      <td>Blue</td>\n      <td>Gray</td>\n      <td>None reported</td>\n      <td>Yes</td>\n      <td>11000</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>BMW</td>\n      <td>335 i</td>\n      <td>2007</td>\n      <td>80000</td>\n      <td>Gasoline</td>\n      <td>300.0HP 3.0L Straight 6 Cylinder Engine Gasoli...</td>\n      <td>6-Speed M/T</td>\n      <td>Black</td>\n      <td>Black</td>\n      <td>None reported</td>\n      <td>Yes</td>\n      <td>8250</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Jaguar</td>\n      <td>XF Luxury</td>\n      <td>2009</td>\n      <td>91491</td>\n      <td>Gasoline</td>\n      <td>300.0HP 4.2L 8 Cylinder Engine Gasoline Fuel</td>\n      <td>6-Speed A/T</td>\n      <td>Purple</td>\n      <td>Beige</td>\n      <td>None reported</td>\n      <td>Yes</td>\n      <td>15000</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>BMW</td>\n      <td>X7 xDrive40i</td>\n      <td>2022</td>\n      <td>2437</td>\n      <td>Hybrid</td>\n      <td>335.0HP 3.0L Straight 6 Cylinder Engine Gasoli...</td>\n      <td>Transmission w/Dual Shift Mode</td>\n      <td>Gray</td>\n      <td>Brown</td>\n      <td>None reported</td>\n      <td>Yes</td>\n      <td>63500</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Pontiac</td>\n      <td>Firebird Base</td>\n      <td>2001</td>\n      <td>111000</td>\n      <td>Gasoline</td>\n      <td>200.0HP 3.8L V6 Cylinder Engine Gasoline Fuel</td>\n      <td>A/T</td>\n      <td>White</td>\n      <td>Black</td>\n      <td>None reported</td>\n      <td>Yes</td>\n      <td>7850</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"test.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:46.537234Z","iopub.execute_input":"2024-06-16T21:28:46.537617Z","iopub.status.idle":"2024-06-16T21:28:46.552945Z","shell.execute_reply.started":"2024-06-16T21:28:46.537574Z","shell.execute_reply":"2024-06-16T21:28:46.551852Z"},"trusted":true},"execution_count":7,"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"               brand                                              model  \\\nid                                                                        \n54273  Mercedes-Benz                                      E-Class E 350   \n54274          Lexus                                        RX 350 Base   \n54275  Mercedes-Benz                                      C-Class C 300   \n54276           Land  Rover Range Rover 5.0L Supercharged Autobiogra...   \n54277            BMW                                       X6 xDrive40i   \n\n       model_year  milage fuel_type  \\\nid                                    \n54273        2014   73000  Gasoline   \n54274        2015  128032  Gasoline   \n54275        2015   51983  Gasoline   \n54276        2018   29500  Gasoline   \n54277        2020   90000  Gasoline   \n\n                                                  engine  \\\nid                                                         \n54273      302.0HP 3.5L V6 Cylinder Engine Gasoline Fuel   \n54274      275.0HP 3.5L V6 Cylinder Engine Gasoline Fuel   \n54275       241.0HP 2.0L 4 Cylinder Engine Gasoline Fuel   \n54276       518.0HP 5.0L 8 Cylinder Engine Gasoline Fuel   \n54277  335.0HP 3.0L Straight 6 Cylinder Engine Gasoli...   \n\n                         transmission ext_col int_col  \\\nid                                                      \n54273                             A/T   White   Beige   \n54274                     8-Speed A/T  Silver   Black   \n54275                     7-Speed A/T    Blue   White   \n54276  Transmission w/Dual Shift Mode   White   White   \n54277                     8-Speed A/T   White   Black   \n\n                                     accident clean_title  \nid                                                         \n54273                           None reported         Yes  \n54274                           None reported         Yes  \n54275                           None reported         Yes  \n54276  At least 1 accident or damage reported         Yes  \n54277  At least 1 accident or damage reported         Yes  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>brand</th>\n      <th>model</th>\n      <th>model_year</th>\n      <th>milage</th>\n      <th>fuel_type</th>\n      <th>engine</th>\n      <th>transmission</th>\n      <th>ext_col</th>\n      <th>int_col</th>\n      <th>accident</th>\n      <th>clean_title</th>\n    </tr>\n    <tr>\n      <th>id</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>54273</th>\n      <td>Mercedes-Benz</td>\n      <td>E-Class E 350</td>\n      <td>2014</td>\n      <td>73000</td>\n      <td>Gasoline</td>\n      <td>302.0HP 3.5L V6 Cylinder Engine Gasoline Fuel</td>\n      <td>A/T</td>\n      <td>White</td>\n      <td>Beige</td>\n      <td>None reported</td>\n      <td>Yes</td>\n    </tr>\n    <tr>\n      <th>54274</th>\n      <td>Lexus</td>\n      <td>RX 350 Base</td>\n      <td>2015</td>\n      <td>128032</td>\n      <td>Gasoline</td>\n      <td>275.0HP 3.5L V6 Cylinder Engine Gasoline Fuel</td>\n      <td>8-Speed A/T</td>\n      <td>Silver</td>\n      <td>Black</td>\n      <td>None reported</td>\n      <td>Yes</td>\n    </tr>\n    <tr>\n      <th>54275</th>\n      <td>Mercedes-Benz</td>\n      <td>C-Class C 300</td>\n      <td>2015</td>\n      <td>51983</td>\n      <td>Gasoline</td>\n      <td>241.0HP 2.0L 4 Cylinder Engine Gasoline Fuel</td>\n      <td>7-Speed A/T</td>\n      <td>Blue</td>\n      <td>White</td>\n      <td>None reported</td>\n      <td>Yes</td>\n    </tr>\n    <tr>\n      <th>54276</th>\n      <td>Land</td>\n      <td>Rover Range Rover 5.0L Supercharged Autobiogra...</td>\n      <td>2018</td>\n      <td>29500</td>\n      <td>Gasoline</td>\n      <td>518.0HP 5.0L 8 Cylinder Engine Gasoline Fuel</td>\n      <td>Transmission w/Dual Shift Mode</td>\n      <td>White</td>\n      <td>White</td>\n      <td>At least 1 accident or damage reported</td>\n      <td>Yes</td>\n    </tr>\n    <tr>\n      <th>54277</th>\n      <td>BMW</td>\n      <td>X6 xDrive40i</td>\n      <td>2020</td>\n      <td>90000</td>\n      <td>Gasoline</td>\n      <td>335.0HP 3.0L Straight 6 Cylinder Engine Gasoli...</td>\n      <td>8-Speed A/T</td>\n      <td>White</td>\n      <td>Black</td>\n      <td>At least 1 accident or damage reported</td>\n      <td>Yes</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"#check missing values\nprint(train.isnull().sum())\nprint(test.isnull().sum())","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:46.554183Z","iopub.execute_input":"2024-06-16T21:28:46.554482Z","iopub.status.idle":"2024-06-16T21:28:46.606436Z","shell.execute_reply.started":"2024-06-16T21:28:46.554458Z","shell.execute_reply":"2024-06-16T21:28:46.605222Z"},"trusted":true},"execution_count":8,"outputs":[{"name":"stdout","text":"brand           0\nmodel           0\nmodel_year      0\nmilage          0\nfuel_type       0\nengine          0\ntransmission    0\next_col         0\nint_col         0\naccident        0\nclean_title     0\nprice           0\ndtype: int64\nbrand           0\nmodel           0\nmodel_year      0\nmilage          0\nfuel_type       0\nengine          0\ntransmission    0\next_col         0\nint_col         0\naccident        0\nclean_title     0\ndtype: int64\n","output_type":"stream"}]},{"cell_type":"code","source":"print(train.describe())","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:46.607492Z","iopub.execute_input":"2024-06-16T21:28:46.607804Z","iopub.status.idle":"2024-06-16T21:28:46.635013Z","shell.execute_reply.started":"2024-06-16T21:28:46.607779Z","shell.execute_reply":"2024-06-16T21:28:46.633911Z"},"trusted":true},"execution_count":9,"outputs":[{"name":"stdout","text":"         model_year         milage         price\ncount  54273.000000   54273.000000  5.427300e+04\nmean    2015.091979   72746.175667  3.921844e+04\nstd        5.588909   50469.490448  7.282634e+04\nmin     1974.000000     100.000000  2.000000e+03\n25%     2012.000000   32268.000000  1.550000e+04\n50%     2016.000000   66107.000000  2.800000e+04\n75%     2019.000000  102000.000000  4.500000e+04\nmax     2024.000000  405000.000000  2.954083e+06\n","output_type":"stream"}]},{"cell_type":"code","source":"#check the different values of tittle\nprint(test['clean_title'].value_counts())\nprint(train['clean_title'].value_counts())","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:46.636593Z","iopub.execute_input":"2024-06-16T21:28:46.636912Z","iopub.status.idle":"2024-06-16T21:28:46.653380Z","shell.execute_reply.started":"2024-06-16T21:28:46.636886Z","shell.execute_reply":"2024-06-16T21:28:46.652189Z"},"trusted":true},"execution_count":10,"outputs":[{"name":"stdout","text":"clean_title\nYes    36183\nName: count, dtype: int64\nclean_title\nYes    54273\nName: count, dtype: int64\n","output_type":"stream"}]},{"cell_type":"markdown","source":"1.Converting model_year to age \n2.All the cars are cleaned title hence drop the column\n3.drop rows with feul_type = to '–' or 'not supported'","metadata":{}},{"cell_type":"code","source":"def age(df):\n    df['age'] =2024 - df['model_year']\n    df.drop('model_year', axis=1, inplace=True)\n    df.drop('clean_title', axis=1, inplace=True)\n\nage(train)\nage(test)","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:46.658013Z","iopub.execute_input":"2024-06-16T21:28:46.658474Z","iopub.status.idle":"2024-06-16T21:28:46.691155Z","shell.execute_reply.started":"2024-06-16T21:28:46.658438Z","shell.execute_reply":"2024-06-16T21:28:46.690339Z"},"trusted":true},"execution_count":11,"outputs":[]},{"cell_type":"code","source":"train.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:46.692096Z","iopub.execute_input":"2024-06-16T21:28:46.692378Z","iopub.status.idle":"2024-06-16T21:28:46.706178Z","shell.execute_reply.started":"2024-06-16T21:28:46.692355Z","shell.execute_reply":"2024-06-16T21:28:46.705091Z"},"trusted":true},"execution_count":12,"outputs":[{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"      brand          model  milage fuel_type  \\\nid                                             \n0      Ford   F-150 Lariat   74349  Gasoline   \n1       BMW          335 i   80000  Gasoline   \n2    Jaguar      XF Luxury   91491  Gasoline   \n3       BMW   X7 xDrive40i    2437    Hybrid   \n4   Pontiac  Firebird Base  111000  Gasoline   \n\n                                               engine  \\\nid                                                      \n0       375.0HP 3.5L V6 Cylinder Engine Gasoline Fuel   \n1   300.0HP 3.0L Straight 6 Cylinder Engine Gasoli...   \n2        300.0HP 4.2L 8 Cylinder Engine Gasoline Fuel   \n3   335.0HP 3.0L Straight 6 Cylinder Engine Gasoli...   \n4       200.0HP 3.8L V6 Cylinder Engine Gasoline Fuel   \n\n                      transmission ext_col int_col       accident  price  age  \nid                                                                             \n0                     10-Speed A/T    Blue    Gray  None reported  11000    6  \n1                      6-Speed M/T   Black   Black  None reported   8250   17  \n2                      6-Speed A/T  Purple   Beige  None reported  15000   15  \n3   Transmission w/Dual Shift Mode    Gray   Brown  None reported  63500    2  \n4                              A/T   White   Black  None reported   7850   23  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>brand</th>\n      <th>model</th>\n      <th>milage</th>\n      <th>fuel_type</th>\n      <th>engine</th>\n      <th>transmission</th>\n      <th>ext_col</th>\n      <th>int_col</th>\n      <th>accident</th>\n      <th>price</th>\n      <th>age</th>\n    </tr>\n    <tr>\n      <th>id</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Ford</td>\n      <td>F-150 Lariat</td>\n      <td>74349</td>\n      <td>Gasoline</td>\n      <td>375.0HP 3.5L V6 Cylinder Engine Gasoline Fuel</td>\n      <td>10-Speed A/T</td>\n      <td>Blue</td>\n      <td>Gray</td>\n      <td>None reported</td>\n      <td>11000</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>BMW</td>\n      <td>335 i</td>\n      <td>80000</td>\n      <td>Gasoline</td>\n      <td>300.0HP 3.0L Straight 6 Cylinder Engine Gasoli...</td>\n      <td>6-Speed M/T</td>\n      <td>Black</td>\n      <td>Black</td>\n      <td>None reported</td>\n      <td>8250</td>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Jaguar</td>\n      <td>XF Luxury</td>\n      <td>91491</td>\n      <td>Gasoline</td>\n      <td>300.0HP 4.2L 8 Cylinder Engine Gasoline Fuel</td>\n      <td>6-Speed A/T</td>\n      <td>Purple</td>\n      <td>Beige</td>\n      <td>None reported</td>\n      <td>15000</td>\n      <td>15</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>BMW</td>\n      <td>X7 xDrive40i</td>\n      <td>2437</td>\n      <td>Hybrid</td>\n      <td>335.0HP 3.0L Straight 6 Cylinder Engine Gasoli...</td>\n      <td>Transmission w/Dual Shift Mode</td>\n      <td>Gray</td>\n      <td>Brown</td>\n      <td>None reported</td>\n      <td>63500</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Pontiac</td>\n      <td>Firebird Base</td>\n      <td>111000</td>\n      <td>Gasoline</td>\n      <td>200.0HP 3.8L V6 Cylinder Engine Gasoline Fuel</td>\n      <td>A/T</td>\n      <td>White</td>\n      <td>Black</td>\n      <td>None reported</td>\n      <td>7850</td>\n      <td>23</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"#drop the rows that have doesnt 'HP' in them\n#train = train[train['engine'].str.contains('HP')]\n#test = test[test['engine'].str.contains('HP')]","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:46.707528Z","iopub.execute_input":"2024-06-16T21:28:46.707908Z","iopub.status.idle":"2024-06-16T21:28:46.715424Z","shell.execute_reply.started":"2024-06-16T21:28:46.707874Z","shell.execute_reply":"2024-06-16T21:28:46.714182Z"},"trusted":true},"execution_count":13,"outputs":[]},{"cell_type":"code","source":"#check the different values of engine\nprint(test['engine'].value_counts())\nprint(train['engine'].value_counts())\n\nunique_engine_test = test['engine'].unique()\nunique_engine_train = train['engine'].unique()","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:46.717032Z","iopub.execute_input":"2024-06-16T21:28:46.717356Z","iopub.status.idle":"2024-06-16T21:28:46.746263Z","shell.execute_reply.started":"2024-06-16T21:28:46.717332Z","shell.execute_reply":"2024-06-16T21:28:46.745232Z"},"trusted":true},"execution_count":14,"outputs":[{"name":"stdout","text":"engine\n300.0HP 3.0L Straight 6 Cylinder Engine Gasoline Fuel           886\n355.0HP 5.3L 8 Cylinder Engine Gasoline Fuel                    784\n240.0HP 2.0L 4 Cylinder Engine Gasoline Fuel                    681\n285.0HP 3.6L V6 Cylinder Engine Gasoline Fuel                   639\n420.0HP 6.2L 8 Cylinder Engine Gasoline Fuel                    608\n                                                               ... \n325.0HP 5.7L 8 Cylinder Engine Gasoline Fuel                      1\n320.0HP Electric Motor Electric Fuel System                       1\n141.0HP 2.0L 4 Cylinder Engine Gasoline Fuel                      1\n208.0HP 3.3L V6 Cylinder Engine Gas/Electric Hybrid               1\n201.0HP 2.0L 4 Cylinder Engine Gasoline/Mild Electric Hybrid      1\nName: count, Length: 1038, dtype: int64\nengine\n300.0HP 3.0L Straight 6 Cylinder Engine Gasoline Fuel    1452\n355.0HP 5.3L 8 Cylinder Engine Gasoline Fuel             1125\n240.0HP 2.0L 4 Cylinder Engine Gasoline Fuel             1054\n285.0HP 3.6L V6 Cylinder Engine Gasoline Fuel             979\n420.0HP 6.2L 8 Cylinder Engine Gasoline Fuel              893\n                                                         ... \n4.4 Liter GDI DOHC Twin Turbo                               1\n3.0 Liter Twin Turbo                                        1\n150.0HP 2.0L 4 Cylinder Engine Diesel Fuel                  1\n266.0HP Electric Motor Electric Fuel System                 1\n151.0HP Electric Motor Hydrogen Fuel                        1\nName: count, Length: 1061, dtype: int64\n","output_type":"stream"}]},{"cell_type":"code","source":"print(test['fuel_type'].value_counts())\nprint(train['fuel_type'].value_counts())","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:46.747587Z","iopub.execute_input":"2024-06-16T21:28:46.748006Z","iopub.status.idle":"2024-06-16T21:28:46.760528Z","shell.execute_reply.started":"2024-06-16T21:28:46.747972Z","shell.execute_reply":"2024-06-16T21:28:46.759482Z"},"trusted":true},"execution_count":15,"outputs":[{"name":"stdout","text":"fuel_type\nGasoline          33033\nHybrid             1112\nE85 Flex Fuel      1018\nDiesel              671\n–                   197\nPlug-In Hybrid      148\nnot supported         4\nName: count, dtype: int64\nfuel_type\nGasoline          49439\nHybrid             1766\nE85 Flex Fuel      1479\nDiesel             1109\n–                   294\nPlug-In Hybrid      182\nnot supported         4\nName: count, dtype: int64\n","output_type":"stream"}]},{"cell_type":"code","source":"train['fuel_type'].replace('–', 'Electric', inplace = True)\ntest['fuel_type'].replace('–', 'Electric', inplace = True)\ntrain['fuel_type'].replace('not supported', 'Electric', inplace = True)\ntest['fuel_type'].replace('not supported', 'Electric', inplace = True)","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:46.761954Z","iopub.execute_input":"2024-06-16T21:28:46.762419Z","iopub.status.idle":"2024-06-16T21:28:46.789856Z","shell.execute_reply.started":"2024-06-16T21:28:46.762373Z","shell.execute_reply":"2024-06-16T21:28:46.789034Z"},"trusted":true},"execution_count":16,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_33/2693774066.py:1: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  train['fuel_type'].replace('–', 'Electric', inplace = True)\n/tmp/ipykernel_33/2693774066.py:2: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  test['fuel_type'].replace('–', 'Electric', inplace = True)\n/tmp/ipykernel_33/2693774066.py:3: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  train['fuel_type'].replace('not supported', 'Electric', inplace = True)\n/tmp/ipykernel_33/2693774066.py:4: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  test['fuel_type'].replace('not supported', 'Electric', inplace = True)\n","output_type":"stream"}]},{"cell_type":"code","source":"print(test['fuel_type'].value_counts())\nprint(train['fuel_type'].value_counts())","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:46.791247Z","iopub.execute_input":"2024-06-16T21:28:46.791547Z","iopub.status.idle":"2024-06-16T21:28:46.804193Z","shell.execute_reply.started":"2024-06-16T21:28:46.791523Z","shell.execute_reply":"2024-06-16T21:28:46.803117Z"},"trusted":true},"execution_count":17,"outputs":[{"name":"stdout","text":"fuel_type\nGasoline          33033\nHybrid             1112\nE85 Flex Fuel      1018\nDiesel              671\nElectric            201\nPlug-In Hybrid      148\nName: count, dtype: int64\nfuel_type\nGasoline          49439\nHybrid             1766\nE85 Flex Fuel      1479\nDiesel             1109\nElectric            298\nPlug-In Hybrid      182\nName: count, dtype: int64\n","output_type":"stream"}]},{"cell_type":"code","source":"import re\n# Define function to extract power\ndef extract_power(engine_type):\n    match = re.search(r'(\\d+\\.\\d+)HP|\\d+\\.\\d+', engine_type)\n    return match.group(1) if match else np.nan\n\n# Define function to extract displacement\ndef extract_displacement(engine_type):\n    match = re.search(r'(\\d+\\.\\d+)L', engine_type)\n    return match.group(1) if match else np.nan\n\n# Define function to extract number of cylinders\ndef extract_cylinders(engine_type):\n    match = re.search(r'(\\d+)\\s*Cylinders?', engine_type, re.IGNORECASE)\n    return match.group(1) if match else np.nan\n\ntrain['power'] = train['engine'].apply(extract_power)\ntest['power'] = test['engine'].apply(extract_power)\ntrain['displacement'] = train['engine'].apply(extract_displacement)\ntest['displacement'] = test['engine'].apply(extract_displacement)\ntrain['cylinders'] = train['engine'].apply(extract_cylinders)\ntest['cylinders'] = test['engine'].apply(extract_cylinders)","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:46.805346Z","iopub.execute_input":"2024-06-16T21:28:46.805646Z","iopub.status.idle":"2024-06-16T21:28:47.327306Z","shell.execute_reply.started":"2024-06-16T21:28:46.805621Z","shell.execute_reply":"2024-06-16T21:28:47.326429Z"},"trusted":true},"execution_count":18,"outputs":[]},{"cell_type":"code","source":"train.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:47.328435Z","iopub.execute_input":"2024-06-16T21:28:47.328752Z","iopub.status.idle":"2024-06-16T21:28:47.368050Z","shell.execute_reply.started":"2024-06-16T21:28:47.328726Z","shell.execute_reply":"2024-06-16T21:28:47.366955Z"},"trusted":true},"execution_count":19,"outputs":[{"execution_count":19,"output_type":"execute_result","data":{"text/plain":"brand              0\nmodel              0\nmilage             0\nfuel_type          0\nengine             0\ntransmission       0\next_col            0\nint_col            0\naccident           0\nprice              0\nage                0\npower           4057\ndisplacement     606\ncylinders       4175\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"test.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:47.369418Z","iopub.execute_input":"2024-06-16T21:28:47.369805Z","iopub.status.idle":"2024-06-16T21:28:47.397210Z","shell.execute_reply.started":"2024-06-16T21:28:47.369778Z","shell.execute_reply":"2024-06-16T21:28:47.396198Z"},"trusted":true},"execution_count":20,"outputs":[{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"brand              0\nmodel              0\nmilage             0\nfuel_type          0\nengine             0\ntransmission       0\next_col            0\nint_col            0\naccident           0\nage                0\npower           2606\ndisplacement     405\ncylinders       2712\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"train['power'] = pd.to_numeric(train['power'], errors = 'coerce')\ntest['power'] = pd.to_numeric(test['power'], errors = 'coerce')","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:47.398537Z","iopub.execute_input":"2024-06-16T21:28:47.398911Z","iopub.status.idle":"2024-06-16T21:28:47.440128Z","shell.execute_reply.started":"2024-06-16T21:28:47.398879Z","shell.execute_reply":"2024-06-16T21:28:47.439262Z"},"trusted":true},"execution_count":21,"outputs":[]},{"cell_type":"code","source":"train['power'].fillna(train['power'].mean(), inplace = True)\ntest['power'].fillna(test['power'].mean(), inplace = True)","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:47.441406Z","iopub.execute_input":"2024-06-16T21:28:47.441791Z","iopub.status.idle":"2024-06-16T21:28:47.453416Z","shell.execute_reply.started":"2024-06-16T21:28:47.441759Z","shell.execute_reply":"2024-06-16T21:28:47.452212Z"},"trusted":true},"execution_count":22,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_33/4277566928.py:1: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  train['power'].fillna(train['power'].mean(), inplace = True)\n/tmp/ipykernel_33/4277566928.py:2: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  test['power'].fillna(test['power'].mean(), inplace = True)\n","output_type":"stream"}]},{"cell_type":"code","source":"train['displacement'] = pd.to_numeric(train['displacement'], errors = 'coerce')\ntest['displacement'] = pd.to_numeric(test['displacement'], errors = 'coerce')\n\ntrain['displacement'].fillna(train['displacement'].mean(), inplace = True)\ntest['displacement'].fillna(test['displacement'].mean(), inplace = True)","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:47.454807Z","iopub.execute_input":"2024-06-16T21:28:47.455129Z","iopub.status.idle":"2024-06-16T21:28:47.498667Z","shell.execute_reply.started":"2024-06-16T21:28:47.455104Z","shell.execute_reply":"2024-06-16T21:28:47.497448Z"},"trusted":true},"execution_count":23,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_33/198984194.py:4: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  train['displacement'].fillna(train['displacement'].mean(), inplace = True)\n/tmp/ipykernel_33/198984194.py:5: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  test['displacement'].fillna(test['displacement'].mean(), inplace = True)\n","output_type":"stream"}]},{"cell_type":"code","source":"train['cylinders'] = pd.to_numeric(train['cylinders'], errors = 'coerce')\ntest['cylinders'] = pd.to_numeric(test['cylinders'], errors = 'coerce')\n\ntrain['cylinders'].fillna(train['cylinders'].mean(), inplace = True)\ntest['cylinders'].fillna(test['cylinders'].mean(), inplace = True)","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:47.500035Z","iopub.execute_input":"2024-06-16T21:28:47.500432Z","iopub.status.idle":"2024-06-16T21:28:47.555551Z","shell.execute_reply.started":"2024-06-16T21:28:47.500398Z","shell.execute_reply":"2024-06-16T21:28:47.554426Z"},"trusted":true},"execution_count":24,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_33/3577290355.py:4: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  train['cylinders'].fillna(train['cylinders'].mean(), inplace = True)\n/tmp/ipykernel_33/3577290355.py:5: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  test['cylinders'].fillna(test['cylinders'].mean(), inplace = True)\n","output_type":"stream"}]},{"cell_type":"code","source":"print(train.isna().sum())\nprint(test.isna().sum())","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:47.556807Z","iopub.execute_input":"2024-06-16T21:28:47.557098Z","iopub.status.idle":"2024-06-16T21:28:47.602633Z","shell.execute_reply.started":"2024-06-16T21:28:47.557074Z","shell.execute_reply":"2024-06-16T21:28:47.601709Z"},"trusted":true},"execution_count":25,"outputs":[{"name":"stdout","text":"brand           0\nmodel           0\nmilage          0\nfuel_type       0\nengine          0\ntransmission    0\next_col         0\nint_col         0\naccident        0\nprice           0\nage             0\npower           0\ndisplacement    0\ncylinders       0\ndtype: int64\nbrand           0\nmodel           0\nmilage          0\nfuel_type       0\nengine          0\ntransmission    0\next_col         0\nint_col         0\naccident        0\nage             0\npower           0\ndisplacement    0\ncylinders       0\ndtype: int64\n","output_type":"stream"}]},{"cell_type":"code","source":"test.info()","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:47.610403Z","iopub.execute_input":"2024-06-16T21:28:47.610809Z","iopub.status.idle":"2024-06-16T21:28:47.639808Z","shell.execute_reply.started":"2024-06-16T21:28:47.610781Z","shell.execute_reply":"2024-06-16T21:28:47.638744Z"},"trusted":true},"execution_count":26,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nIndex: 36183 entries, 54273 to 90455\nData columns (total 13 columns):\n #   Column        Non-Null Count  Dtype  \n---  ------        --------------  -----  \n 0   brand         36183 non-null  object \n 1   model         36183 non-null  object \n 2   milage        36183 non-null  int64  \n 3   fuel_type     36183 non-null  object \n 4   engine        36183 non-null  object \n 5   transmission  36183 non-null  object \n 6   ext_col       36183 non-null  object \n 7   int_col       36183 non-null  object \n 8   accident      36183 non-null  object \n 9   age           36183 non-null  int64  \n 10  power         36183 non-null  float64\n 11  displacement  36183 non-null  float64\n 12  cylinders     36183 non-null  float64\ndtypes: float64(3), int64(2), object(8)\nmemory usage: 3.9+ MB\n","output_type":"stream"}]},{"cell_type":"code","source":"train.drop('engine', axis=1, inplace=True)\ntest.drop('engine', axis=1, inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:47.641314Z","iopub.execute_input":"2024-06-16T21:28:47.641704Z","iopub.status.idle":"2024-06-16T21:28:47.661727Z","shell.execute_reply.started":"2024-06-16T21:28:47.641669Z","shell.execute_reply":"2024-06-16T21:28:47.660637Z"},"trusted":true},"execution_count":27,"outputs":[]},{"cell_type":"code","source":"print(train['accident'].value_counts())\nprint(test['accident'].value_counts())","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:47.663257Z","iopub.execute_input":"2024-06-16T21:28:47.663635Z","iopub.status.idle":"2024-06-16T21:28:47.677095Z","shell.execute_reply.started":"2024-06-16T21:28:47.663601Z","shell.execute_reply":"2024-06-16T21:28:47.676018Z"},"trusted":true},"execution_count":28,"outputs":[{"name":"stdout","text":"accident\nNone reported                             39896\nAt least 1 accident or damage reported    14377\nName: count, dtype: int64\naccident\nNone reported                             26598\nAt least 1 accident or damage reported     9585\nName: count, dtype: int64\n","output_type":"stream"}]},{"cell_type":"code","source":"transmission_type = train['transmission'].value_counts()\ntransmission_type_test = test['transmission'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:47.678580Z","iopub.execute_input":"2024-06-16T21:28:47.678889Z","iopub.status.idle":"2024-06-16T21:28:47.697206Z","shell.execute_reply.started":"2024-06-16T21:28:47.678864Z","shell.execute_reply":"2024-06-16T21:28:47.696217Z"},"trusted":true},"execution_count":29,"outputs":[]},{"cell_type":"code","source":"\"\"\"# Regular expressions to match patterns\nautomatic_pattern = re.compile(r'\\bA/T\\b|\\bAutomatic\\b||')\nmanual_pattern = re.compile(r'\\bM/T\\b|\\bManual\\b|\\b\\d+-Speed Manual\\b|d+-Speed M/T\\b')\ncvt_pattern = re.compile(r'\\bCVT\\b')\n\n# Function to categorize transmission types\ndef categorize_transmission(transmission):\n    if re.search(automatic_pattern, transmission):\n        return 'Automatic'\n    elif re.search(manual_pattern, transmission):\n        return 'Manual'\n    elif re.search(cvt_pattern, transmission):\n        return 'CVT'\n    else:\n        return transmission  # Return original value if no match found\n\n# Apply the categorization function\ntrain['transmission_standardized'] = train['transmission'].apply(categorize_transmission)\n\"\"\"","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:47.698597Z","iopub.execute_input":"2024-06-16T21:28:47.698927Z","iopub.status.idle":"2024-06-16T21:28:47.710165Z","shell.execute_reply.started":"2024-06-16T21:28:47.698901Z","shell.execute_reply":"2024-06-16T21:28:47.709098Z"},"trusted":true},"execution_count":30,"outputs":[{"execution_count":30,"output_type":"execute_result","data":{"text/plain":"\"# Regular expressions to match patterns\\nautomatic_pattern = re.compile(r'\\x08A/T\\x08|\\x08Automatic\\x08||')\\nmanual_pattern = re.compile(r'\\x08M/T\\x08|\\x08Manual\\x08|\\x08\\\\d+-Speed Manual\\x08|d+-Speed M/T\\x08')\\ncvt_pattern = re.compile(r'\\x08CVT\\x08')\\n\\n# Function to categorize transmission types\\ndef categorize_transmission(transmission):\\n    if re.search(automatic_pattern, transmission):\\n        return 'Automatic'\\n    elif re.search(manual_pattern, transmission):\\n        return 'Manual'\\n    elif re.search(cvt_pattern, transmission):\\n        return 'CVT'\\n    else:\\n        return transmission  # Return original value if no match found\\n\\n# Apply the categorization function\\ntrain['transmission_standardized'] = train['transmission'].apply(categorize_transmission)\\n\""},"metadata":{}}]},{"cell_type":"code","source":"train.info()","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:47.711390Z","iopub.execute_input":"2024-06-16T21:28:47.711725Z","iopub.status.idle":"2024-06-16T21:28:47.744615Z","shell.execute_reply.started":"2024-06-16T21:28:47.711670Z","shell.execute_reply":"2024-06-16T21:28:47.743530Z"},"trusted":true},"execution_count":31,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nIndex: 54273 entries, 0 to 54272\nData columns (total 13 columns):\n #   Column        Non-Null Count  Dtype  \n---  ------        --------------  -----  \n 0   brand         54273 non-null  object \n 1   model         54273 non-null  object \n 2   milage        54273 non-null  int64  \n 3   fuel_type     54273 non-null  object \n 4   transmission  54273 non-null  object \n 5   ext_col       54273 non-null  object \n 6   int_col       54273 non-null  object \n 7   accident      54273 non-null  object \n 8   price         54273 non-null  int64  \n 9   age           54273 non-null  int64  \n 10  power         54273 non-null  float64\n 11  displacement  54273 non-null  float64\n 12  cylinders     54273 non-null  float64\ndtypes: float64(3), int64(3), object(7)\nmemory usage: 5.8+ MB\n","output_type":"stream"}]},{"cell_type":"code","source":"train.drop('model', axis=1, inplace=True)\ntest.drop('model', axis=1, inplace=True)\ntrain.drop('ext_col', axis=1, inplace=True)\ntest.drop('ext_col', axis=1, inplace=True)\ntrain.drop('int_col', axis=1, inplace=True)\ntest.drop('int_col', axis=1, inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:47.745817Z","iopub.execute_input":"2024-06-16T21:28:47.746139Z","iopub.status.idle":"2024-06-16T21:28:47.783224Z","shell.execute_reply.started":"2024-06-16T21:28:47.746109Z","shell.execute_reply":"2024-06-16T21:28:47.782224Z"},"trusted":true},"execution_count":32,"outputs":[]},{"cell_type":"code","source":"train.info()","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:47.784316Z","iopub.execute_input":"2024-06-16T21:28:47.784595Z","iopub.status.idle":"2024-06-16T21:28:47.807153Z","shell.execute_reply.started":"2024-06-16T21:28:47.784572Z","shell.execute_reply":"2024-06-16T21:28:47.805946Z"},"trusted":true},"execution_count":33,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nIndex: 54273 entries, 0 to 54272\nData columns (total 10 columns):\n #   Column        Non-Null Count  Dtype  \n---  ------        --------------  -----  \n 0   brand         54273 non-null  object \n 1   milage        54273 non-null  int64  \n 2   fuel_type     54273 non-null  object \n 3   transmission  54273 non-null  object \n 4   accident      54273 non-null  object \n 5   price         54273 non-null  int64  \n 6   age           54273 non-null  int64  \n 7   power         54273 non-null  float64\n 8   displacement  54273 non-null  float64\n 9   cylinders     54273 non-null  float64\ndtypes: float64(3), int64(3), object(4)\nmemory usage: 4.6+ MB\n","output_type":"stream"}]},{"cell_type":"code","source":"\ntrain.isna().sum()","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:47.808593Z","iopub.execute_input":"2024-06-16T21:28:47.808902Z","iopub.status.idle":"2024-06-16T21:28:47.829565Z","shell.execute_reply.started":"2024-06-16T21:28:47.808876Z","shell.execute_reply":"2024-06-16T21:28:47.828592Z"},"trusted":true},"execution_count":34,"outputs":[{"execution_count":34,"output_type":"execute_result","data":{"text/plain":"brand           0\nmilage          0\nfuel_type       0\ntransmission    0\naccident        0\nprice           0\nage             0\npower           0\ndisplacement    0\ncylinders       0\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"test.isna().sum()","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:47.830885Z","iopub.execute_input":"2024-06-16T21:28:47.831233Z","iopub.status.idle":"2024-06-16T21:28:47.847498Z","shell.execute_reply.started":"2024-06-16T21:28:47.831207Z","shell.execute_reply":"2024-06-16T21:28:47.846488Z"},"trusted":true},"execution_count":35,"outputs":[{"execution_count":35,"output_type":"execute_result","data":{"text/plain":"brand           0\nmilage          0\nfuel_type       0\ntransmission    0\naccident        0\nage             0\npower           0\ndisplacement    0\ncylinders       0\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"train.hist(bins=50, figsize=(20,15))","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:47.849241Z","iopub.execute_input":"2024-06-16T21:28:47.849596Z","iopub.status.idle":"2024-06-16T21:28:49.973433Z","shell.execute_reply.started":"2024-06-16T21:28:47.849568Z","shell.execute_reply":"2024-06-16T21:28:49.972558Z"},"trusted":true},"execution_count":36,"outputs":[{"execution_count":36,"output_type":"execute_result","data":{"text/plain":"array([[<Axes: title={'center': 'milage'}>,\n        <Axes: title={'center': 'price'}>],\n       [<Axes: title={'center': 'age'}>,\n        <Axes: title={'center': 'power'}>],\n       [<Axes: title={'center': 'displacement'}>,\n        <Axes: title={'center': 'cylinders'}>]], dtype=object)"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 2000x1500 with 6 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"# Create a strip plot for the 'price' variable\nplt.figure(figsize=(8, 6))\nsns.stripplot(data=train, y='price', jitter=True, color='purple', alpha=0.5)\nplt.title('Strip Plot: Price Distribution')\nplt.ylabel('Price')\nplt.grid(True)\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:49.974528Z","iopub.execute_input":"2024-06-16T21:28:49.974897Z","iopub.status.idle":"2024-06-16T21:28:50.367283Z","shell.execute_reply.started":"2024-06-16T21:28:49.974865Z","shell.execute_reply":"2024-06-16T21:28:50.366275Z"},"trusted":true},"execution_count":37,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 800x600 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"Q1 = train['price'].quantile(0.25)\nQ3 = train['price'].quantile(0.75)\nIQR = Q3 - Q1\nprint(IQR)\ntrain = train[~((train['price'] < (Q1 - 1.5 * IQR)) |(train['price'] > (Q3 + 0.7 * IQR)))]","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:50.368399Z","iopub.execute_input":"2024-06-16T21:28:50.368703Z","iopub.status.idle":"2024-06-16T21:28:50.387428Z","shell.execute_reply.started":"2024-06-16T21:28:50.368678Z","shell.execute_reply":"2024-06-16T21:28:50.386281Z"},"trusted":true},"execution_count":38,"outputs":[{"name":"stdout","text":"29500.0\n","output_type":"stream"}]},{"cell_type":"code","source":"import category_encoders as ce\n\ndef label_encoder(col):\n    encoder = ce.TargetEncoder(cols=[col])\n    train[col+'_target'] = encoder.fit_transform(train[col], train['price'])\n    test[col+'_target'] = encoder.transform(test[col])\n\nlabel_encoder('brand')\nlabel_encoder('fuel_type')\nlabel_encoder('transmission')","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:50.388923Z","iopub.execute_input":"2024-06-16T21:28:50.389328Z","iopub.status.idle":"2024-06-16T21:28:51.032564Z","shell.execute_reply.started":"2024-06-16T21:28:50.389294Z","shell.execute_reply":"2024-06-16T21:28:51.031717Z"},"trusted":true},"execution_count":39,"outputs":[]},{"cell_type":"code","source":"train.info()","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:51.033662Z","iopub.execute_input":"2024-06-16T21:28:51.034081Z","iopub.status.idle":"2024-06-16T21:28:51.055139Z","shell.execute_reply.started":"2024-06-16T21:28:51.034056Z","shell.execute_reply":"2024-06-16T21:28:51.053987Z"},"trusted":true},"execution_count":40,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nIndex: 47678 entries, 0 to 54272\nData columns (total 13 columns):\n #   Column               Non-Null Count  Dtype  \n---  ------               --------------  -----  \n 0   brand                47678 non-null  object \n 1   milage               47678 non-null  int64  \n 2   fuel_type            47678 non-null  object \n 3   transmission         47678 non-null  object \n 4   accident             47678 non-null  object \n 5   price                47678 non-null  int64  \n 6   age                  47678 non-null  int64  \n 7   power                47678 non-null  float64\n 8   displacement         47678 non-null  float64\n 9   cylinders            47678 non-null  float64\n 10  brand_target         47678 non-null  float64\n 11  fuel_type_target     47678 non-null  float64\n 12  transmission_target  47678 non-null  float64\ndtypes: float64(6), int64(3), object(4)\nmemory usage: 5.1+ MB\n","output_type":"stream"}]},{"cell_type":"code","source":"train.drop(['brand','fuel_type','transmission'], axis=1, inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:51.056662Z","iopub.execute_input":"2024-06-16T21:28:51.057030Z","iopub.status.idle":"2024-06-16T21:28:51.067640Z","shell.execute_reply.started":"2024-06-16T21:28:51.056997Z","shell.execute_reply":"2024-06-16T21:28:51.066558Z"},"trusted":true},"execution_count":41,"outputs":[]},{"cell_type":"code","source":"train.info()","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:51.068741Z","iopub.execute_input":"2024-06-16T21:28:51.069067Z","iopub.status.idle":"2024-06-16T21:28:51.084674Z","shell.execute_reply.started":"2024-06-16T21:28:51.069036Z","shell.execute_reply":"2024-06-16T21:28:51.083687Z"},"trusted":true},"execution_count":42,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nIndex: 47678 entries, 0 to 54272\nData columns (total 10 columns):\n #   Column               Non-Null Count  Dtype  \n---  ------               --------------  -----  \n 0   milage               47678 non-null  int64  \n 1   accident             47678 non-null  object \n 2   price                47678 non-null  int64  \n 3   age                  47678 non-null  int64  \n 4   power                47678 non-null  float64\n 5   displacement         47678 non-null  float64\n 6   cylinders            47678 non-null  float64\n 7   brand_target         47678 non-null  float64\n 8   fuel_type_target     47678 non-null  float64\n 9   transmission_target  47678 non-null  float64\ndtypes: float64(6), int64(3), object(1)\nmemory usage: 4.0+ MB\n","output_type":"stream"}]},{"cell_type":"code","source":"# For the 'train' DataFrame\ntrain['accident'] = train['accident'].apply(lambda x: 1 if x == 'None reported' else 0)\n\n# For the 'test' DataFrame\ntest['accident'] = test['accident'].apply(lambda x: 1 if x == 'None reported' else 0)","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:51.085989Z","iopub.execute_input":"2024-06-16T21:28:51.086308Z","iopub.status.idle":"2024-06-16T21:28:51.128414Z","shell.execute_reply.started":"2024-06-16T21:28:51.086283Z","shell.execute_reply":"2024-06-16T21:28:51.127285Z"},"trusted":true},"execution_count":43,"outputs":[]},{"cell_type":"code","source":"test.drop(['brand','fuel_type','transmission'], axis=1, inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:51.129822Z","iopub.execute_input":"2024-06-16T21:28:51.130226Z","iopub.status.idle":"2024-06-16T21:28:51.141276Z","shell.execute_reply.started":"2024-06-16T21:28:51.130190Z","shell.execute_reply":"2024-06-16T21:28:51.140400Z"},"trusted":true},"execution_count":44,"outputs":[]},{"cell_type":"code","source":"test.info()","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:51.142728Z","iopub.execute_input":"2024-06-16T21:28:51.143507Z","iopub.status.idle":"2024-06-16T21:28:51.156400Z","shell.execute_reply.started":"2024-06-16T21:28:51.143472Z","shell.execute_reply":"2024-06-16T21:28:51.155218Z"},"trusted":true},"execution_count":45,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nIndex: 36183 entries, 54273 to 90455\nData columns (total 9 columns):\n #   Column               Non-Null Count  Dtype  \n---  ------               --------------  -----  \n 0   milage               36183 non-null  int64  \n 1   accident             36183 non-null  int64  \n 2   age                  36183 non-null  int64  \n 3   power                36183 non-null  float64\n 4   displacement         36183 non-null  float64\n 5   cylinders            36183 non-null  float64\n 6   brand_target         36183 non-null  float64\n 7   fuel_type_target     36183 non-null  float64\n 8   transmission_target  36183 non-null  float64\ndtypes: float64(6), int64(3)\nmemory usage: 2.8 MB\n","output_type":"stream"}]},{"cell_type":"code","source":"train.corr()","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:51.158042Z","iopub.execute_input":"2024-06-16T21:28:51.158488Z","iopub.status.idle":"2024-06-16T21:28:51.193012Z","shell.execute_reply.started":"2024-06-16T21:28:51.158454Z","shell.execute_reply":"2024-06-16T21:28:51.192042Z"},"trusted":true},"execution_count":46,"outputs":[{"execution_count":46,"output_type":"execute_result","data":{"text/plain":"                       milage  accident     price       age     power  \\\nmilage               1.000000 -0.266457 -0.629178  0.599082 -0.327190   \naccident            -0.266457  1.000000  0.255982 -0.185636  0.148393   \nprice               -0.629178  0.255982  1.000000 -0.638214  0.500800   \nage                  0.599082 -0.185636 -0.638214  1.000000 -0.317157   \npower               -0.327190  0.148393  0.500800 -0.317157  1.000000   \ndisplacement         0.031172  0.035663  0.180737  0.052709  0.615664   \ncylinders           -0.005069  0.048993  0.205810  0.053076  0.711382   \nbrand_target        -0.230708  0.107159  0.308794 -0.239260  0.396463   \nfuel_type_target    -0.089534  0.032594  0.134757 -0.155823  0.020954   \ntransmission_target -0.420905  0.145947  0.453675 -0.504260  0.339257   \n\n                     displacement  cylinders  brand_target  fuel_type_target  \\\nmilage                   0.031172  -0.005069     -0.230708         -0.089534   \naccident                 0.035663   0.048993      0.107159          0.032594   \nprice                    0.180737   0.205810      0.308794          0.134757   \nage                      0.052709   0.053076     -0.239260         -0.155823   \npower                    0.615664   0.711382      0.396463          0.020954   \ndisplacement             1.000000   0.869794      0.199804          0.004132   \ncylinders                0.869794   1.000000      0.257447         -0.044191   \nbrand_target             0.199804   0.257447      1.000000          0.059797   \nfuel_type_target         0.004132  -0.044191      0.059797          1.000000   \ntransmission_target     -0.014919   0.052075      0.276770          0.066852   \n\n                     transmission_target  \nmilage                         -0.420905  \naccident                        0.145947  \nprice                           0.453675  \nage                            -0.504260  \npower                           0.339257  \ndisplacement                   -0.014919  \ncylinders                       0.052075  \nbrand_target                    0.276770  \nfuel_type_target                0.066852  \ntransmission_target             1.000000  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>milage</th>\n      <th>accident</th>\n      <th>price</th>\n      <th>age</th>\n      <th>power</th>\n      <th>displacement</th>\n      <th>cylinders</th>\n      <th>brand_target</th>\n      <th>fuel_type_target</th>\n      <th>transmission_target</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>milage</th>\n      <td>1.000000</td>\n      <td>-0.266457</td>\n      <td>-0.629178</td>\n      <td>0.599082</td>\n      <td>-0.327190</td>\n      <td>0.031172</td>\n      <td>-0.005069</td>\n      <td>-0.230708</td>\n      <td>-0.089534</td>\n      <td>-0.420905</td>\n    </tr>\n    <tr>\n      <th>accident</th>\n      <td>-0.266457</td>\n      <td>1.000000</td>\n      <td>0.255982</td>\n      <td>-0.185636</td>\n      <td>0.148393</td>\n      <td>0.035663</td>\n      <td>0.048993</td>\n      <td>0.107159</td>\n      <td>0.032594</td>\n      <td>0.145947</td>\n    </tr>\n    <tr>\n      <th>price</th>\n      <td>-0.629178</td>\n      <td>0.255982</td>\n      <td>1.000000</td>\n      <td>-0.638214</td>\n      <td>0.500800</td>\n      <td>0.180737</td>\n      <td>0.205810</td>\n      <td>0.308794</td>\n      <td>0.134757</td>\n      <td>0.453675</td>\n    </tr>\n    <tr>\n      <th>age</th>\n      <td>0.599082</td>\n      <td>-0.185636</td>\n      <td>-0.638214</td>\n      <td>1.000000</td>\n      <td>-0.317157</td>\n      <td>0.052709</td>\n      <td>0.053076</td>\n      <td>-0.239260</td>\n      <td>-0.155823</td>\n      <td>-0.504260</td>\n    </tr>\n    <tr>\n      <th>power</th>\n      <td>-0.327190</td>\n      <td>0.148393</td>\n      <td>0.500800</td>\n      <td>-0.317157</td>\n      <td>1.000000</td>\n      <td>0.615664</td>\n      <td>0.711382</td>\n      <td>0.396463</td>\n      <td>0.020954</td>\n      <td>0.339257</td>\n    </tr>\n    <tr>\n      <th>displacement</th>\n      <td>0.031172</td>\n      <td>0.035663</td>\n      <td>0.180737</td>\n      <td>0.052709</td>\n      <td>0.615664</td>\n      <td>1.000000</td>\n      <td>0.869794</td>\n      <td>0.199804</td>\n      <td>0.004132</td>\n      <td>-0.014919</td>\n    </tr>\n    <tr>\n      <th>cylinders</th>\n      <td>-0.005069</td>\n      <td>0.048993</td>\n      <td>0.205810</td>\n      <td>0.053076</td>\n      <td>0.711382</td>\n      <td>0.869794</td>\n      <td>1.000000</td>\n      <td>0.257447</td>\n      <td>-0.044191</td>\n      <td>0.052075</td>\n    </tr>\n    <tr>\n      <th>brand_target</th>\n      <td>-0.230708</td>\n      <td>0.107159</td>\n      <td>0.308794</td>\n      <td>-0.239260</td>\n      <td>0.396463</td>\n      <td>0.199804</td>\n      <td>0.257447</td>\n      <td>1.000000</td>\n      <td>0.059797</td>\n      <td>0.276770</td>\n    </tr>\n    <tr>\n      <th>fuel_type_target</th>\n      <td>-0.089534</td>\n      <td>0.032594</td>\n      <td>0.134757</td>\n      <td>-0.155823</td>\n      <td>0.020954</td>\n      <td>0.004132</td>\n      <td>-0.044191</td>\n      <td>0.059797</td>\n      <td>1.000000</td>\n      <td>0.066852</td>\n    </tr>\n    <tr>\n      <th>transmission_target</th>\n      <td>-0.420905</td>\n      <td>0.145947</td>\n      <td>0.453675</td>\n      <td>-0.504260</td>\n      <td>0.339257</td>\n      <td>-0.014919</td>\n      <td>0.052075</td>\n      <td>0.276770</td>\n      <td>0.066852</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"train.hist(bins=50, figsize=(20,15))","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:51.194312Z","iopub.execute_input":"2024-06-16T21:28:51.194619Z","iopub.status.idle":"2024-06-16T21:28:54.273524Z","shell.execute_reply.started":"2024-06-16T21:28:51.194584Z","shell.execute_reply":"2024-06-16T21:28:54.272592Z"},"trusted":true},"execution_count":47,"outputs":[{"execution_count":47,"output_type":"execute_result","data":{"text/plain":"array([[<Axes: title={'center': 'milage'}>,\n        <Axes: title={'center': 'accident'}>,\n        <Axes: title={'center': 'price'}>],\n       [<Axes: title={'center': 'age'}>,\n        <Axes: title={'center': 'power'}>,\n        <Axes: title={'center': 'displacement'}>],\n       [<Axes: title={'center': 'cylinders'}>,\n        <Axes: title={'center': 'brand_target'}>,\n        <Axes: title={'center': 'fuel_type_target'}>],\n       [<Axes: title={'center': 'transmission_target'}>, <Axes: >,\n        <Axes: >]], dtype=object)"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 2000x1500 with 12 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"# Create a strip plot for the 'price' variable\nplt.figure(figsize=(8, 6))\nsns.stripplot(data=train, y='price', jitter=True, color='purple', alpha=0.5)\nplt.title('Strip Plot: Price Distribution')\nplt.ylabel('Price')\nplt.grid(True)\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:54.274649Z","iopub.execute_input":"2024-06-16T21:28:54.274931Z","iopub.status.idle":"2024-06-16T21:28:54.581842Z","shell.execute_reply.started":"2024-06-16T21:28:54.274907Z","shell.execute_reply":"2024-06-16T21:28:54.580822Z"},"trusted":true},"execution_count":48,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1075: FutureWarning: When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas. Pass `(name,)` instead of `name` to silence this warning.\n  data_subset = grouped_data.get_group(pd_key)\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 800x600 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"test.corr()","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:54.583171Z","iopub.execute_input":"2024-06-16T21:28:54.583542Z","iopub.status.idle":"2024-06-16T21:28:54.610971Z","shell.execute_reply.started":"2024-06-16T21:28:54.583509Z","shell.execute_reply":"2024-06-16T21:28:54.609844Z"},"trusted":true},"execution_count":49,"outputs":[{"execution_count":49,"output_type":"execute_result","data":{"text/plain":"                       milage  accident       age     power  displacement  \\\nmilage               1.000000 -0.294878  0.626519 -0.396764     -0.031818   \naccident            -0.294878  1.000000 -0.216510  0.181372      0.049004   \nage                  0.626519 -0.216510  1.000000 -0.368345      0.002140   \npower               -0.396764  0.181372 -0.368345  1.000000      0.594453   \ndisplacement        -0.031818  0.049004  0.002140  0.594453      1.000000   \ncylinders           -0.072038  0.066962  0.001774  0.705987      0.856779   \nbrand_target        -0.276124  0.128337 -0.267006  0.407911      0.207675   \nfuel_type_target    -0.117123  0.044452 -0.170814  0.036213     -0.000220   \ntransmission_target -0.446687  0.173060 -0.520140  0.364178      0.031390   \n\n                     cylinders  brand_target  fuel_type_target  \\\nmilage               -0.072038     -0.276124         -0.117123   \naccident              0.066962      0.128337          0.044452   \nage                   0.001774     -0.267006         -0.170814   \npower                 0.705987      0.407911          0.036213   \ndisplacement          0.856779      0.207675         -0.000220   \ncylinders             1.000000      0.277328         -0.043994   \nbrand_target          0.277328      1.000000          0.067273   \nfuel_type_target     -0.043994      0.067273          1.000000   \ntransmission_target   0.082610      0.285502          0.087481   \n\n                     transmission_target  \nmilage                         -0.446687  \naccident                        0.173060  \nage                            -0.520140  \npower                           0.364178  \ndisplacement                    0.031390  \ncylinders                       0.082610  \nbrand_target                    0.285502  \nfuel_type_target                0.087481  \ntransmission_target             1.000000  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>milage</th>\n      <th>accident</th>\n      <th>age</th>\n      <th>power</th>\n      <th>displacement</th>\n      <th>cylinders</th>\n      <th>brand_target</th>\n      <th>fuel_type_target</th>\n      <th>transmission_target</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>milage</th>\n      <td>1.000000</td>\n      <td>-0.294878</td>\n      <td>0.626519</td>\n      <td>-0.396764</td>\n      <td>-0.031818</td>\n      <td>-0.072038</td>\n      <td>-0.276124</td>\n      <td>-0.117123</td>\n      <td>-0.446687</td>\n    </tr>\n    <tr>\n      <th>accident</th>\n      <td>-0.294878</td>\n      <td>1.000000</td>\n      <td>-0.216510</td>\n      <td>0.181372</td>\n      <td>0.049004</td>\n      <td>0.066962</td>\n      <td>0.128337</td>\n      <td>0.044452</td>\n      <td>0.173060</td>\n    </tr>\n    <tr>\n      <th>age</th>\n      <td>0.626519</td>\n      <td>-0.216510</td>\n      <td>1.000000</td>\n      <td>-0.368345</td>\n      <td>0.002140</td>\n      <td>0.001774</td>\n      <td>-0.267006</td>\n      <td>-0.170814</td>\n      <td>-0.520140</td>\n    </tr>\n    <tr>\n      <th>power</th>\n      <td>-0.396764</td>\n      <td>0.181372</td>\n      <td>-0.368345</td>\n      <td>1.000000</td>\n      <td>0.594453</td>\n      <td>0.705987</td>\n      <td>0.407911</td>\n      <td>0.036213</td>\n      <td>0.364178</td>\n    </tr>\n    <tr>\n      <th>displacement</th>\n      <td>-0.031818</td>\n      <td>0.049004</td>\n      <td>0.002140</td>\n      <td>0.594453</td>\n      <td>1.000000</td>\n      <td>0.856779</td>\n      <td>0.207675</td>\n      <td>-0.000220</td>\n      <td>0.031390</td>\n    </tr>\n    <tr>\n      <th>cylinders</th>\n      <td>-0.072038</td>\n      <td>0.066962</td>\n      <td>0.001774</td>\n      <td>0.705987</td>\n      <td>0.856779</td>\n      <td>1.000000</td>\n      <td>0.277328</td>\n      <td>-0.043994</td>\n      <td>0.082610</td>\n    </tr>\n    <tr>\n      <th>brand_target</th>\n      <td>-0.276124</td>\n      <td>0.128337</td>\n      <td>-0.267006</td>\n      <td>0.407911</td>\n      <td>0.207675</td>\n      <td>0.277328</td>\n      <td>1.000000</td>\n      <td>0.067273</td>\n      <td>0.285502</td>\n    </tr>\n    <tr>\n      <th>fuel_type_target</th>\n      <td>-0.117123</td>\n      <td>0.044452</td>\n      <td>-0.170814</td>\n      <td>0.036213</td>\n      <td>-0.000220</td>\n      <td>-0.043994</td>\n      <td>0.067273</td>\n      <td>1.000000</td>\n      <td>0.087481</td>\n    </tr>\n    <tr>\n      <th>transmission_target</th>\n      <td>-0.446687</td>\n      <td>0.173060</td>\n      <td>-0.520140</td>\n      <td>0.364178</td>\n      <td>0.031390</td>\n      <td>0.082610</td>\n      <td>0.285502</td>\n      <td>0.087481</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"def quart(df):\n    # Calculate quartiles\n    Q1 = df['price'].quantile(0.25)\n    Q2 = df['price'].median()\n    Q3 = df['price'].quantile(0.75)\n\n    # Define a function to categorize data points into quartiles\n    def categorize_quartile(value):\n        if value < Q1:\n            return \"Q1 (25%)\"\n        elif value < Q2:\n            return \"Q2 (50%)\"\n        elif value < Q3:\n            return \"Q3 (75%)\"\n        else:\n            return \"Q4 (100%)\"\n        \n    # Apply the categorize_quartile function to the 'price' column\n    df['Quartile'] = df['price'].apply(categorize_quartile)\n\n    # Count the number of data points in each quartile\n    quartile_counts = df['Quartile'].value_counts().reset_index()\n    quartile_counts.columns = ['Quartile', 'Count']\n\n    # Display the quartile distribution table\n    print(quartile_counts)\n\n\nquart(train)","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:54.612274Z","iopub.execute_input":"2024-06-16T21:28:54.612599Z","iopub.status.idle":"2024-06-16T21:28:54.649816Z","shell.execute_reply.started":"2024-06-16T21:28:54.612573Z","shell.execute_reply":"2024-06-16T21:28:54.648760Z"},"trusted":true},"execution_count":50,"outputs":[{"name":"stdout","text":"    Quartile  Count\n0   Q3 (75%)  12028\n1   Q2 (50%)  11978\n2  Q4 (100%)  11920\n3   Q1 (25%)  11752\n","output_type":"stream"}]},{"cell_type":"code","source":"train.describe()","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:54.651312Z","iopub.execute_input":"2024-06-16T21:28:54.651987Z","iopub.status.idle":"2024-06-16T21:28:54.705398Z","shell.execute_reply.started":"2024-06-16T21:28:54.651952Z","shell.execute_reply":"2024-06-16T21:28:54.704434Z"},"trusted":true},"execution_count":51,"outputs":[{"execution_count":51,"output_type":"execute_result","data":{"text/plain":"              milage      accident         price           age         power  \\\ncount   47678.000000  47678.000000  47678.000000  47678.000000  47678.000000   \nmean    79017.969504      0.710349  26943.079219      9.496183    318.030682   \nstd     49418.154681      0.453605  15404.132778      5.512482     95.406901   \nmin       100.000000      0.000000   2000.000000      0.000000     76.000000   \n25%     42653.000000      0.000000  14500.000000      5.000000    252.000000   \n50%     72329.000000      1.000000  24900.000000      8.000000    310.000000   \n75%    108000.000000      1.000000  37475.500000     13.000000    375.000000   \nmax    405000.000000      1.000000  65500.000000     50.000000   1020.000000   \n\n       displacement     cylinders  brand_target  fuel_type_target  \\\ncount  47678.000000  47678.000000  47678.000000      47678.000000   \nmean       3.649098      6.188238  26937.466158      26943.079171   \nstd        1.314001      1.463770   4729.893900       2075.807919   \nmin        0.650000      3.000000  11511.616582      17731.600000   \n25%        2.700000      6.000000  24525.448845      26727.332745   \n50%        3.500000      6.000000  29186.471925      26727.332745   \n75%        4.400000      8.000000  29635.891644      26727.332745   \nmax        8.400000     12.000000  45614.362790      35194.921260   \n\n       transmission_target  \ncount         47678.000000  \nmean          26928.699312  \nstd            6976.123022  \nmin           11681.765900  \n25%           22179.077309  \n50%           22442.515973  \n75%           31183.413245  \nmax           45198.192624  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>milage</th>\n      <th>accident</th>\n      <th>price</th>\n      <th>age</th>\n      <th>power</th>\n      <th>displacement</th>\n      <th>cylinders</th>\n      <th>brand_target</th>\n      <th>fuel_type_target</th>\n      <th>transmission_target</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>47678.000000</td>\n      <td>47678.000000</td>\n      <td>47678.000000</td>\n      <td>47678.000000</td>\n      <td>47678.000000</td>\n      <td>47678.000000</td>\n      <td>47678.000000</td>\n      <td>47678.000000</td>\n      <td>47678.000000</td>\n      <td>47678.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>79017.969504</td>\n      <td>0.710349</td>\n      <td>26943.079219</td>\n      <td>9.496183</td>\n      <td>318.030682</td>\n      <td>3.649098</td>\n      <td>6.188238</td>\n      <td>26937.466158</td>\n      <td>26943.079171</td>\n      <td>26928.699312</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>49418.154681</td>\n      <td>0.453605</td>\n      <td>15404.132778</td>\n      <td>5.512482</td>\n      <td>95.406901</td>\n      <td>1.314001</td>\n      <td>1.463770</td>\n      <td>4729.893900</td>\n      <td>2075.807919</td>\n      <td>6976.123022</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>100.000000</td>\n      <td>0.000000</td>\n      <td>2000.000000</td>\n      <td>0.000000</td>\n      <td>76.000000</td>\n      <td>0.650000</td>\n      <td>3.000000</td>\n      <td>11511.616582</td>\n      <td>17731.600000</td>\n      <td>11681.765900</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>42653.000000</td>\n      <td>0.000000</td>\n      <td>14500.000000</td>\n      <td>5.000000</td>\n      <td>252.000000</td>\n      <td>2.700000</td>\n      <td>6.000000</td>\n      <td>24525.448845</td>\n      <td>26727.332745</td>\n      <td>22179.077309</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>72329.000000</td>\n      <td>1.000000</td>\n      <td>24900.000000</td>\n      <td>8.000000</td>\n      <td>310.000000</td>\n      <td>3.500000</td>\n      <td>6.000000</td>\n      <td>29186.471925</td>\n      <td>26727.332745</td>\n      <td>22442.515973</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>108000.000000</td>\n      <td>1.000000</td>\n      <td>37475.500000</td>\n      <td>13.000000</td>\n      <td>375.000000</td>\n      <td>4.400000</td>\n      <td>8.000000</td>\n      <td>29635.891644</td>\n      <td>26727.332745</td>\n      <td>31183.413245</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>405000.000000</td>\n      <td>1.000000</td>\n      <td>65500.000000</td>\n      <td>50.000000</td>\n      <td>1020.000000</td>\n      <td>8.400000</td>\n      <td>12.000000</td>\n      <td>45614.362790</td>\n      <td>35194.921260</td>\n      <td>45198.192624</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"from sklearn.metrics import make_scorer, mean_squared_error\n\ndef rmse(y_true, y_pred):\n    return np.sqrt(mean_squared_error(y_true, y_pred))\n\nrmse_scorer = make_scorer(rmse, greater_is_better=False)","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:54.706409Z","iopub.execute_input":"2024-06-16T21:28:54.706677Z","iopub.status.idle":"2024-06-16T21:28:54.815785Z","shell.execute_reply.started":"2024-06-16T21:28:54.706655Z","shell.execute_reply":"2024-06-16T21:28:54.814662Z"},"trusted":true},"execution_count":52,"outputs":[]},{"cell_type":"code","source":"#train a linear regression model with cross validation\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import cross_val_score\n\nX = train.drop(['price','Quartile'], axis=1)\ny = train['price']\n\n","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:54.817097Z","iopub.execute_input":"2024-06-16T21:28:54.817449Z","iopub.status.idle":"2024-06-16T21:28:54.915244Z","shell.execute_reply.started":"2024-06-16T21:28:54.817421Z","shell.execute_reply":"2024-06-16T21:28:54.914190Z"},"trusted":true},"execution_count":53,"outputs":[]},{"cell_type":"code","source":"# Create a linear regression model\nmodel = LinearRegression()\n\n# Perform cross-validation\nscores = cross_val_score(model, X, y, cv=5, scoring=rmse_scorer)\n\n# Print the mean error score\nprint('Mean Absolute Error:', np.mean(-scores))","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:54.916491Z","iopub.execute_input":"2024-06-16T21:28:54.916822Z","iopub.status.idle":"2024-06-16T21:28:55.076516Z","shell.execute_reply.started":"2024-06-16T21:28:54.916796Z","shell.execute_reply":"2024-06-16T21:28:55.075416Z"},"trusted":true},"execution_count":54,"outputs":[{"name":"stdout","text":"Mean Absolute Error: 9932.056829558502\n","output_type":"stream"}]},{"cell_type":"code","source":"mean_price = train['price'].mean()\nstd_price = train['price'].std()\n\nprint(f'Mean Price: {mean_price}')\nprint(f'Standard Deviation of Price: {std_price}')\n","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:55.077966Z","iopub.execute_input":"2024-06-16T21:28:55.078451Z","iopub.status.idle":"2024-06-16T21:28:55.085669Z","shell.execute_reply.started":"2024-06-16T21:28:55.078416Z","shell.execute_reply":"2024-06-16T21:28:55.084474Z"},"trusted":true},"execution_count":55,"outputs":[{"name":"stdout","text":"Mean Price: 26943.079218926967\nStandard Deviation of Price: 15404.132777547295\n","output_type":"stream"}]},{"cell_type":"code","source":"from sklearn.dummy import DummyRegressor\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.metrics import make_scorer, mean_squared_error\n\ndef rmse(y_true, y_pred):\n    return np.sqrt(mean_squared_error(y_true, y_pred))\n\nrmse_scorer = make_scorer(rmse, greater_is_better=False)\n\ndummy_model = DummyRegressor(strategy='mean')\nbaseline_scores = cross_val_score(dummy_model, X, y, cv=5, scoring=rmse_scorer)\nbaseline_rmse = -baseline_scores.mean()\n\nprint(f'Baseline RMSE: {baseline_rmse}')\n","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:55.087557Z","iopub.execute_input":"2024-06-16T21:28:55.088072Z","iopub.status.idle":"2024-06-16T21:28:55.193313Z","shell.execute_reply.started":"2024-06-16T21:28:55.088037Z","shell.execute_reply":"2024-06-16T21:28:55.192236Z"},"trusted":true},"execution_count":56,"outputs":[{"name":"stdout","text":"Baseline RMSE: 15404.223483650905\n","output_type":"stream"}]},{"cell_type":"code","source":"import matplotlib.pyplot as plt\n\n# Fit the model and get predictions\nmodel.fit(X, y)\npredictions = model.predict(X)\n\n# Calculate errors\nerrors = predictions - y\n\n# Plot error distribution\nplt.hist(errors, bins=50)\nplt.xlabel('Prediction Error')\nplt.ylabel('Frequency')\nplt.title('Distribution of Prediction Errors')\nplt.show()\n","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:28:55.194515Z","iopub.execute_input":"2024-06-16T21:28:55.195331Z","iopub.status.idle":"2024-06-16T21:28:55.512954Z","shell.execute_reply.started":"2024-06-16T21:28:55.195302Z","shell.execute_reply":"2024-06-16T21:28:55.511904Z"},"trusted":true},"execution_count":57,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"from sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import GridSearchCV\n\n# Define the model\nrf_model = RandomForestRegressor(random_state=1)\n\n# Define the hyperparameters to tune\nparam_grid = {\n    'n_estimators': [200],\n    'max_depth': [6],\n    'min_samples_split': [5],\n    'min_samples_leaf': [4]\n}\n\n# Set up grid search\ngrid_search = GridSearchCV(estimator=rf_model, param_grid=param_grid, cv=5, scoring=rmse_scorer, n_jobs=-1)\n\n# Fit the grid search to the data\ngrid_search.fit(X, y)\n\n# Get the best model from grid search\nbest_rf_model = grid_search.best_estimator_\n\n# Evaluate the best model\nbest_rf_scores = cross_val_score(best_rf_model, X, y, cv=5, scoring=rmse_scorer)\nbest_rf_rmse = -best_rf_scores.mean()\n\nprint(f'Best Random Forest RMSE: {best_rf_rmse}')\n","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:29:32.160936Z","iopub.execute_input":"2024-06-16T21:29:32.161334Z","iopub.status.idle":"2024-06-16T21:30:50.665501Z","shell.execute_reply.started":"2024-06-16T21:29:32.161304Z","shell.execute_reply":"2024-06-16T21:30:50.663824Z"},"trusted":true},"execution_count":59,"outputs":[{"name":"stdout","text":"Best Random Forest RMSE: 9261.239121857787\n","output_type":"stream"}]},{"cell_type":"code","source":"#predict the test data in dataframe\ntest_predictions = best_rf_model.predict(test)\n\n# Create a DataFrame for the predictions\nsubmission = pd.DataFrame({'id': test.index, 'price': test_predictions})","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:29:22.460847Z","iopub.status.idle":"2024-06-16T21:29:22.461404Z","shell.execute_reply.started":"2024-06-16T21:29:22.461114Z","shell.execute_reply":"2024-06-16T21:29:22.461137Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"submission.to_csv('submission.csv', index=False)","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:29:22.463250Z","iopub.status.idle":"2024-06-16T21:29:22.464018Z","shell.execute_reply.started":"2024-06-16T21:29:22.463745Z","shell.execute_reply":"2024-06-16T21:29:22.463768Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"9261.883977359048","metadata":{"execution":{"iopub.status.busy":"2024-06-16T21:29:22.465840Z","iopub.status.idle":"2024-06-16T21:29:22.466839Z","shell.execute_reply.started":"2024-06-16T21:29:22.466553Z","shell.execute_reply":"2024-06-16T21:29:22.466584Z"},"trusted":true},"execution_count":null,"outputs":[]}]}